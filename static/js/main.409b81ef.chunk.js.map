{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerId","setInterval","state","time","Date","this","setState","console","log","toLocaleTimeString","oldName","name","props","clearInterval","className","React","Component","App","isClockVisible","clockName","clockVisibilityHandler","isVisible","createRandomName","Math","round","random","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"yLAUaA,EAAb,4MACEC,QAAwBC,aAAY,cAAU,GADhD,EAGEC,MAAQ,CACNC,KAAM,IAAIC,MAJd,uDAOE,WAAqB,IAAD,OAClBC,KAAKL,QAAUC,aAAY,WACzB,EAAKK,SAAS,CACZH,KAAM,IAAIC,OAIZG,QAAQC,IAAI,EAAKN,MAAMC,KAAKM,wBAC3B,OAfP,gCAkBE,YAA8C,IAAnBC,EAAkB,EAAxBC,KACXA,EAASN,KAAKO,MAAdD,KAEJD,IAAYC,GAEdJ,QAAQC,IAAR,qCAA0CE,EAA1C,eAAwDC,MAvB9D,kCA2BE,WACEE,cAAcR,KAAKL,WA5BvB,oBA+BE,WACE,IAAQG,EAASE,KAAKH,MAAdC,KAER,OACE,oBAAGW,UAAU,QAAb,UACG,iBACAX,EAAKM,4BArCd,GAA2BM,IAAMC,WCD3BC,E,4MACJf,MAAQ,CACNgB,gBAAgB,EAChBC,UAAW,G,EAGbC,uBAAyB,SAACC,GACxB,EAAKf,SAAS,CAAEY,eAAgBG,K,EAGlCC,iBAAmB,WACb,EAAKpB,MAAMgB,gBACb,EAAKZ,SAAS,CACZa,UAAWI,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAKjC,WAAU,IAAD,OACP,EAAsCpB,KAAKH,MAAnCgB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,sBAAKL,UAAU,MAAf,UACE,6BAAKT,KAAKH,MAAMiB,YAEfD,GAAkB,cAAC,EAAD,CAAOP,KAAMQ,IAChC,wBACEL,UAAU,gCACVY,KAAK,SACLC,QAAS,kBAAM,EAAKP,wBAAuB,IAH7C,kBAQCF,GACC,wBACEJ,UAAU,cACVY,KAAK,SACLC,QAAS,kBAAM,EAAKP,wBAAuB,IAH7C,kBASDF,GACC,wBACEJ,UAAU,cACVY,KAAK,SACLC,QAAStB,KAAKiB,iBAHhB,oC,GA7CQP,IAAMC,WA0DTC,IChEfW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.409b81ef.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  time: Date;\n};\n\ntype Props = {\n  name: number;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  timerId: NodeJS.Timer = setInterval(() => {}, 0);\n\n  state = {\n    time: new Date(),\n  };\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({\n        time: new Date(),\n      });\n\n      // eslint-disable-next-line\n      console.log(this.state.time.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate({ name: oldName }: Props) {\n    const { name } = this.props;\n\n    if (oldName !== name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${oldName} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { time } = this.state;\n\n    return (\n      <p className=\"Clock\">\n        {'Current time: '}\n        {time.toLocaleTimeString()}\n      </p>\n    );\n  }\n}\n","import React from 'react';\n\nimport { Clock } from './components/Clock/Clock';\n\ntype State = {\n  isClockVisible: boolean;\n  clockName: number;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  clockVisibilityHandler = (isVisible: boolean): void => {\n    this.setState({ isClockVisible: isVisible });\n  };\n\n  createRandomName = () => {\n    if (this.state.isClockVisible) {\n      this.setState({\n        clockName: Math.round(Math.random() * 100),\n      });\n    }\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>{this.state.clockName}</h1>\n\n        {isClockVisible && <Clock name={clockName} />}\n        <button\n          className=\"App__button App__button--main\"\n          type=\"button\"\n          onClick={() => this.clockVisibilityHandler(true)}\n        >\n          Show\n        </button>\n\n        {isClockVisible && (\n          <button\n            className=\"App__button\"\n            type=\"button\"\n            onClick={() => this.clockVisibilityHandler(false)}\n          >\n            Hide\n          </button>\n        )}\n\n        {isClockVisible && (\n          <button\n            className=\"App__button\"\n            type=\"button\"\n            onClick={this.createRandomName}\n          >\n            Set random name\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}